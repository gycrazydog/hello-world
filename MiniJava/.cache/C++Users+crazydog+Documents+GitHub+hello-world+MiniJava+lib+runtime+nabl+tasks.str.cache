Module("runtime/nabl/tasks",[Imports([Import("runtime/task/core"),Import("runtime/task/tasks"),Import("runtime/task/utils"),Import("runtime/nabl/lookup"),Import("runtime/nabl/collect"),Import("runtime/nabl/query"),Import("runtime/nabl/incremental"),Import("runtime/nabl/interface"),Import("runtime/nabl/uri"),Import("runtime/nabl/utils"),Import("runtime/nabl/entries"),Import("runtime/properties/entries"),Import("runtime/properties/eq"),Import("runtime/properties/query")]),Signature([Constructors([OpDecl("CollectDefs",FunType([ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Instruction")))),OpDecl("ResolveDefs",FunType([ConstType(SortNoArgs("Scope")),ConstType(SortNoArgs("Namespace")),ConstType(SortNoArgs("Name")),ConstType(SortNoArgs("Prop"))],ConstType(SortNoArgs("Instruction")))),OpDecl("CheckDefs",FunType([ConstType(SortNoArgs("Namespace")),ConstType(SortNoArgs("URI"))],ConstType(SortNoArgs("Instruction")))),OpDecl("DisambiguateDefs",FunType([ConstType(Sort("List",[SortNoArgs("Def")])),ConstType(Sort("List",[SortNoArgs("Prop")])),ConstType(SortNoArgs("Namespace")),ConstType(SortNoArgs("Name"))],ConstType(SortNoArgs("Instruction")))),OpDecl("ResolveNamedImports",FunType([ConstType(SortNoArgs("Scope")),ConstType(SortNoArgs("Namespace")),ConstType(SortNoArgs("Name"))],ConstType(SortNoArgs("Instruction")))),OpDecl("ImportCalc",FunType([ConstType(SortNoArgs("URI"))],ConstType(SortNoArgs("Instruction")))),OpDecl("ImportClosure",FunType([ConstType(SortNoArgs("URI"))],ConstType(SortNoArgs("Instruction")))),OpDecl("PropConstraint",FunType([ConstType(SortNoArgs("Kind")),ConstType(SortNoArgs("Expected")),ConstType(SortNoArgs("Result"))],ConstType(SortNoArgs("Instruction")))),OpDecl("ResolveAllDefs",FunType([ConstType(SortNoArgs("Scope")),ConstType(SortNoArgs("Namespace"))],ConstType(SortNoArgs("Instruction"))))])]),Rules([SDefT("perform-task",[],[DefaultVarDec("nr")],Seq(Match(NoAnnoList(Op("CollectDefs",[RootApp(Id)]))),LChoice(Match(NoAnnoList(Op("Def",[Wld]))),Seq(Call(SVar("try"),[CallNoArgs(SVar("nabl-get-name"))]),Seq(CallNoArgs(SVar("get-annos")),Call(SVar("mapconcat"),[Choice(Seq(Match(NoAnnoList(Op("Def",[Wld]))),CallNoArgs(SVar("MkSingleton"))),Match(NoAnnoList(Op("Use",[RootApp(LChoice(CallNoArgs(SVar("is-list")),CallNoArgs(SVar("MkSingleton"))))]))))]))))))]),Rules([RDefT("perform-task",[],[DefaultVarDec("nr")],Rule(NoAnnoList(Op("ResolveDefs",[Var("scope"),Var("ns"),Var("name"),Var(ListVar("prop*"))])),Var("result"),Seq(Assign(Var("uri"),App(CallNoArgs(SVar("nabl-uri")),Var("scope"))),Seq(Assign(Var("name'"),App(Seq(CallNoArgs(SVar("try-remove-list")),CallNoArgs(SVar("strip-annos"))),Var("name"))),Seq(BA(CallT(SVar("nabl-add-name-read"),[],[Var("nr"),Var("ns"),Var("name'")]),Var("uri")),Seq(Assign(Var(ListVar("def*")),App(Seq(CallT(SVar("nabl-lookup"),[],[Var("ns"),Var("name'")]),Seq(CallNoArgs(SVar("insert-results-or-create-dependency")),Call(SVar("try"),[CallNoArgs(SVar("concat"))]))),Var("uri"))),Assign(Var("result"),App(Seq(Call(SVar("filter"),[CallT(SVar("filter-defs-props"),[],[Var(ListVar("prop*"))])]),LChoice(CallNoArgs(SVar("task-collect-dependencies")),Not(Match(NoAnnoList(List([])))))),Var(ListVar("def*")))))))))),SDefNoArgs("task-short-circuit",Match(NoAnnoList(Op("ResolveDefs",[Wld,Wld,Wld,Wld])))),RDefT("filter-defs-props",[],[DefaultVarDec(ListVar("prop*"))],RuleNoCond(Var("definition"),App(Seq(Call(SVar("map"),[CallT(SVar("filter-defs-prop"),[],[Var("definition")])]),LChoice(CallNoArgs(SVar("task-collect-dependencies")),Build(Var("definition")))),Var(ListVar("prop*"))))),RDefT("filter-defs-prop",[],[DefaultVarDec("definition")],Rule(NoAnnoList(Op("Prop",[Var("kind"),Var("expected"),Wld])),Var("result"),Seq(Assign(Var("uri"),App(CallNoArgs(SVar("nabl-uri")),Var("definition"))),Seq(Assign(Var("value"),App(CallT(SVar("get-index-property"),[],[Var("kind")]),Var("uri"))),Seq(Assign(Var("value'"),App(CallNoArgs(SVar("insert-results-or-create-dependency")),Var("value"))),AM(SwitchChoice(Id,[SwitchCase(AM(CallNoArgs(SVar("task-collect-dependencies")),Var("d")),Build(Var("d")))],LChoice(Seq(BA(CallNoArgs(SVar("nabl-property-eq")),NoAnnoList(Tuple([Var("kind"),NoAnnoList(Op("Eq",[])),NoAnnoList(Tuple([Var("expected"),Var("value'")]))]))),Build(Var("definition"))),Seq(BA(CallNoArgs(SVar("nabl-property-eq")),NoAnnoList(Tuple([Var("kind"),NoAnnoList(Op("Eq",[])),NoAnnoList(Tuple([Var("expected"),App(CallNoArgs(SVar("try-remove-list")),Var("value'"))]))]))),Build(Var("definition"))))),Var("result"))))))),RDefT("perform-task",[],[DefaultVarDec("nr")],RuleNoCond(NoAnnoList(Op("PropConstraint",[Var("kind"),Var("expected"),Var("definition")])),App(CallT(SVar("filter-defs-prop"),[],[Var("definition")]),NoAnnoList(Op("Prop",[Var("kind"),Var("expected"),NoAnnoList(List([]))]))))),RDefT("perform-task",[],[DefaultVarDec("nr")],Rule(NoAnnoList(Op("CheckDefs",[Var("ns"),Var("d")])),Var("d"),BA(Seq(CallNoArgs(SVar("nabl-uri")),Seq(CallNoArgs(SVar("nabl-uri-namespace")),Match(Var("ns")))),Var("d"))))]),Rules([RDefT("perform-task",[],[DefaultVarDec("nr")],Rule(NoAnnoList(Op("ResolveAllDefs",[Var("scope"),Var("ns")])),Var(ListVar("def*")),Seq(Assign(Var("uri"),App(CallNoArgs(SVar("nabl-uri")),Var("scope"))),Seq(BA(CallT(SVar("nabl-add-ns-read"),[],[Var("nr"),Var("ns")]),Var("uri")),Seq(Assign(Var(ListVar("def*")),App(CallT(SVar("nabl-lookup-all"),[],[Var("ns")]),Var("uri"))),Not(Match(NoAnnoList(List([]))))))))),RDefT("nabl-resolve-all-defs-subtasks",[],[DefaultVarDec("partition"),DefaultVarDec("ns"),DefaultVarDec(ListVar("prop*")),DefaultVarDec("range")],Rule(Var("uri"),NoAnnoList(ListTail([Var("task")],Var("subtasks"))),[WithClause(Seq(Assign(Var("task"),App(CallT(SVar("nabl-resolve-all-defs-subtasks-one"),[],[Var("partition"),Var("ns"),Var(ListVar("prop*")),Var("range")]),Var("uri"))),AM(SwitchChoiceNoOtherwise(Build(Var("range")),[SwitchCase(Call(SVar("One"),[]),Build(NoAnnoList(List([])))),SwitchCase(Call(SVar("All"),[]),BA(GuardedLChoice(CallNoArgs(SVar("nabl-uri-parent")),CallT(SVar("nabl-resolve-all-defs-subtasks"),[],[Var("partition"),Var("ns"),Var(ListVar("prop*")),Var("range")]),Build(NoAnnoList(List([])))),Var("uri")))]),Var("subtasks"))))])),RDefT("nabl-resolve-all-defs-subtasks-one",[],[DefaultVarDec("partition"),DefaultVarDec("ns"),DefaultVarDec(ListVar("prop*")),DefaultVarDec("range")],Rule(Var("uri"),Var("filtered"),[WithClause(Seq(Assign(Var("def-task"),App(CallT(SVar("new-task"),[],[Var("partition")]),NoAnnoList(Op("ResolveAllDefs",[Var("uri"),Var("ns")])))),Assign(Var("filtered"),App(CallT(SVar("nabl-use-propconstraint"),[],[Var("partition")]),NoAnnoList(Tuple([Var("def-task"),Var(ListVar("prop*"))]))))))]))])])