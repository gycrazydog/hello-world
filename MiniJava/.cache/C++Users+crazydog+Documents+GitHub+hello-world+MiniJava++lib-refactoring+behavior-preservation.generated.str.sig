Module("lib-refactoring/behavior-preservation.generated",[Imports([(),(),(),(),()]),Strategies([SDefT("semantic-violation-errors",[VarDec("constraint-error",ConstType(SortNoArgs("ATerm"))),VarDec("constraint-warning",ConstType(SortNoArgs("ATerm")))],[],[]),SDefT("semantic-violation-errors",[VarDec("constraint-error",ConstType(SortNoArgs("ATerm"))),VarDec("constraint-warning",ConstType(SortNoArgs("ATerm")))],[VarDec("endangered-names",ConstType(SortNoArgs("ATerm")))],[]),SDefT("semantic-violation-errors",[VarDec("constraint-error",ConstType(SortNoArgs("ATerm"))),VarDec("constraint-warning",ConstType(SortNoArgs("ATerm"))),VarDec("is-endangered-name",ConstType(SortNoArgs("ATerm")))],[],[]),SDefT("semantic-violation-errors",[VarDec("constraint-error",ConstType(SortNoArgs("ATerm"))),VarDec("constraint-warning",ConstType(SortNoArgs("ATerm"))),VarDec("is-endangered-name",ConstType(SortNoArgs("ATerm"))),VarDec("analyze-multifile",ConstType(SortNoArgs("ATerm")))],[],[]),SDefT("is-same-error-term",[],[],[]),SDefT("get-semantic-violations",[VarDec("constraint-error",ConstType(SortNoArgs("ATerm"))),VarDec("constraint-warning",ConstType(SortNoArgs("ATerm"))),VarDec("is-endangered-name",ConstType(SortNoArgs("ATerm")))],[],[])])])