Module("codegen/example",[Imports([Import("milestone1/MiniJava"),Import("milestone2/MiniJava.core"),Import("lib/CIL/CIL")]),Rules([SDefNoArgs("to-jbc",Choice(CallNoArgs(SVar("program-to-jbc")),Choice(CallNoArgs(SVar("class-to-jbc")),Choice(CallNoArgs(SVar("stmt-to-jbc")),CallNoArgs(SVar("exp-to-jbc")))))),RDefNoArgs("exp-to-jbc",RuleNoCond(NoAnnoList(Op("IntValue",[Var("i")])),NoAnnoList(List([NoAnnoList(Op("LDC",[Var("i")]))])))),RDefNoArgs("program-to-jbc",Rule(NoAnnoList(Op("Program",[Var("m"),Var("c")])),Var("result"),Assign(Var("result"),App(CallNoArgs(SVar("class-to-jbc")),Var("m"))))),RDefNoArgs("class-to-jbc",Rule(NoAnnoList(Op("MainClass",[Var("n"),Var("id2"),Var("s")])),Var("r"),Seq(Assign(Var("head"),NoAnnoList(Op("Header",[NoAnnoList(Op("CallExternal",[])),NoAnnoList(Op("Property",[App(CallNoArgs(SVar("strip-annos")),Var("n")),NoAnnoList(List([]))]))]))),Seq(BA(Call(SVar("debug"),[Build(NoAnnoList(Str("\"head:  \"")))]),Var("head")),Seq(BA(Call(SVar("debug"),[Build(NoAnnoList(Str("\"s:  \"")))]),Var("s")),Seq(Assign(Var(ListVar("stmt*")),App(CallNoArgs(SVar("stmt-to-jbc")),Var("s"))),Seq(Assign(Var(ListVar("class*")),NoAnnoList(List([NoAnnoList(Op("Class",[NoAnnoList(List([])),App(CallNoArgs(SVar("strip-annos")),Var("n")),NoAnnoList(List([])),NoAnnoList(List([])),NoAnnoList(List([NoAnnoList(Op("MainMethod",[NoAnnoList(List([])),NoAnnoList(Op("Void",[])),NoAnnoList(Str("\"main\"")),NoAnnoList(List([])),NoAnnoList(Op("EntryPoint",[])),NoAnnoList(List([NoAnnoList(Op("MaxStack",[NoAnnoList(Str("\"5\""))])),Var(ListVar("stmt*")),NoAnnoList(Op("Return",[]))]))]))]))]))]))),Assign(Var("r"),NoAnnoList(Op("File",[Var("head"),Var(ListVar("class*"))])))))))))),RDefNoArgs("stmt-to-jbc",Rule(NoAnnoList(Op("Print",[Var("s")])),Var(ListVar("temp*")),Seq(Assign(Var(ListVar("exp*")),App(CallNoArgs(SVar("exp-to-jbc")),Var("s"))),Seq(BA(Call(SVar("debug"),[Build(NoAnnoList(Str("\"exp:  \"")))]),Var(ListVar("exp*"))),Seq(Assign(Var(ListVar("call*")),NoAnnoList(List([NoAnnoList(Op("Call",[NoAnnoList(Op("Void",[])),NoAnnoList(Op("MSLibrary",[])),NoAnnoList(Op("Object",[NoAnnoList(Str("\"System.Console\""))])),NoAnnoList(Str("\"WriteLine\"")),NoAnnoList(List([NoAnnoList(Op("Int",[]))]))]))]))),Seq(BA(Call(SVar("debug"),[Build(NoAnnoList(Str("\"call:  \"")))]),Var(ListVar("call*"))),Seq(Assign(Var(ListVar("temp*")),NoAnnoList(List([Var(ListVar("exp*")),Var(ListVar("call*"))]))),BA(Call(SVar("debug"),[Build(NoAnnoList(Str("\"temp:  \"")))]),Var(ListVar("temp*"))))))))))])])