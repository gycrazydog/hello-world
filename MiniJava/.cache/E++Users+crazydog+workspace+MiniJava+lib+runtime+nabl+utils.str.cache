Module("runtime/nabl/utils",[Imports([Import("libstratego-lib"),Import("runtime/task/core"),Import("runtime/editor/annotations")]),Rules([SDefT("match",[DefaultVarDec("m")],[DefaultVarDec("val")],Where(Seq(Build(Var("val")),CallNoArgs(SVar("m"))))),SDef("vdebug",[DefaultVarDec("s")],Where(GuardedLChoice(CallNoArgs(SVar("verbose")),Call(SVar("debug"),[CallNoArgs(SVar("s"))]),Id))),SDefNoArgs("verbose",Fail),SDefNoArgs("is-completion-name",Match(NoAnnoList(Str("\"completion123\"")))),SDefNoArgs("fix-completion-name",Seq(CallNoArgs(SVar("is-completion-name")),Build(NoAnnoList(Str("\"\""))))),SDef("measure-time",[DefaultVarDec("s"),DefaultVarDec("log")],Seq(Where(Assign(Var("before"),RootApp(CallNoArgs(SVar("times"))))),Seq(CallNoArgs(SVar("s")),Where(Seq(Assign(Var("after"),RootApp(CallNoArgs(SVar("times")))),Seq(Build(NoAnnoList(Tuple([Var("after"),Var("before")]))),Seq(CallNoArgs(SVar("diff-times")),Seq(CallNoArgs(SVar("times-to-seconds")),Seq(CallNoArgs(SVar("Fst")),CallNoArgs(SVar("log"))))))))))),SDefT("measure-time",[DefaultVarDec("s"),DefaultVarDec("log")],[DefaultVarDec("name")],Call(SVar("measure-time"),[CallNoArgs(SVar("s")),Seq(CallT(SVar("record-time"),[],[Var("name")]),CallNoArgs(SVar("log")))])),SDefT("record-time",[],[DefaultVarDec("name")],Id),SDefNoArgs("try-make-list",LChoice(CallNoArgs(SVar("is-list")),LChoice(Match(NoAnnoList(Op("Dependency",[Wld]))),Build(NoAnnoList(List([RootApp(Id)])))))),SDefNoArgs("try-remove-list",GuardedLChoice(CallNoArgs(SVar("is-list")),CallNoArgs(SVar("Hd")),Id)),SDef("has-annotation",[DefaultVarDec("s")],Call(SVar("get-annotation"),[CallNoArgs(SVar("s"))]))]),Rules([RDefT("hash-multimap-put",[],[DefaultVarDec("key"),DefaultVarDec("value")],Rule(Var("hashtable"),Var("hashtable"),Seq(Assign(Var("values"),App(CallT(SVar("hash-multimap-getorcreate"),[],[Var("key")]),Var("hashtable"))),BA(CallT(SVar("hashtable-put"),[],[Var("key"),NoAnnoList(ListTail([Var("value")],Var("values")))]),Var("hashtable"))))),RDefT("hash-multimap-putlist",[],[DefaultVarDec("key"),DefaultVarDec(ListVar("put-value*"))],Rule(Var("hashtable"),Var("hashtable"),Seq(Assign(Var(ListVar("value*")),App(CallT(SVar("hash-multimap-getorcreate"),[],[Var("key")]),Var("hashtable"))),BA(CallT(SVar("hashtable-put"),[],[Var("key"),NoAnnoList(List([Var(ListVar("value*")),Var(ListVar("put-value*"))]))]),Var("hashtable"))))),SDefT("hash-multimap-getorcreate",[],[DefaultVarDec("key")],LChoice(CallT(SVar("hashtable-get"),[],[Var("key")]),Seq(CallT(SVar("hashtable-put"),[],[Var("key"),NoAnnoList(List([]))]),Build(NoAnnoList(List([])))))),RDefT("hash-multimap-copy",[],[DefaultVarDec("from")],Rule(Var("to"),Var("to"),BA(CallT(SVar("hashtable-fold"),[CallNoArgs(SVar("hash-multimap-copy-fold"))],[Var("to")]),Var("from")))),RDefT("hash-multimap-copy-fold",[],[DefaultVarDec("key"),DefaultVarDec(ListVar("value*"))],RuleNoCond(Var("to"),App(CallT(SVar("hash-multimap-putlist"),[],[Var("key"),Var(ListVar("value*"))]),Var("to"))))])])