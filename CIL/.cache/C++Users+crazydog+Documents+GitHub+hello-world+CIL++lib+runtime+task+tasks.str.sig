Module("runtime/task/tasks",[Imports([(),(),()]),Signature([Constructors([OpDecl("Id",FunType([ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Instruction")))),OpDecl("Combine",FunType([ConstType(Sort("List",[SortNoArgs("Term")]))],ConstType(SortNoArgs("Instruction")))),OpDecl("Collect",FunType([ConstType(Sort("List",[SortNoArgs("Term")]))],ConstType(SortNoArgs("Instruction")))),OpDecl("Choice",FunType([ConstType(Sort("List",[Sort("List",[SortNoArgs("Term")])]))],ConstType(SortNoArgs("Instruction")))),OpDecl("Sequence",FunType([ConstType(Sort("List",[SortNoArgs("Term")]))],ConstType(SortNoArgs("Instruction")))),OpDecl("Rewrite",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Instruction")))),OpDecl("Index",FunType([ConstType(SortNoArgs("Int")),ConstType(Sort("List",[SortNoArgs("Term")]))],ConstType(SortNoArgs("Instruction")))),OpDecl("Length",FunType([ConstType(Sort("List",[SortNoArgs("Term")]))],ConstType(SortNoArgs("Instruction"))))])]),Rules([SDefT("perform-cyclic-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[]),SDefT("perform-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("task-is-combinator",[],[],[]),SDefT("perform-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("task-is-combinator",[],[],[]),SDefT("perform-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("perform-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("task-is-combinator",[],[],[]),SDefT("perform-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("task-is-combinator",[],[],[]),SDefT("perform-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("perform-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("perform-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[]),SDefT("perform-task",[],[VarDec("nr",ConstType(SortNoArgs("ATerm")))],[])])])