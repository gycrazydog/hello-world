Module("runtime/analysis/core",[Imports([Import("runtime/analysis/interface"),Import("runtime/index/core"),Import("runtime/nabl/collect"),Import("runtime/nabl/incremental"),Import("runtime/nabl/entries"),Import("runtime/nabl/uri"),Import("runtime/nabl/utils"),Import("runtime/task/core"),Import("runtime/task/messages"),Import("runtime/editor/origins")]),Signature([Constructors([OpDecl("File",FunType([ConstType(SortNoArgs("Path")),ConstType(SortNoArgs("AST"))],ConstType(SortNoArgs("File")))),OpDecl("Result",FunType([ConstType(SortNoArgs("Partition")),ConstType(SortNoArgs("AST")),ConstType(SortNoArgs("AST")),ConstType(Sort("List",[SortNoArgs("URI")])),ConstType(Sort("List",[SortNoArgs("Term")])),ConstType(Sort("List",[SortNoArgs("Term")])),ConstType(Sort("List",[SortNoArgs("Term")]))],ConstType(SortNoArgs("Result")))),OpDecl("DebugResult",FunType([ConstType(Sort("List",[SortNoArgs("Entry")])),ConstType(Sort("List",[SortNoArgs("Entry")])),ConstType(Sort("List",[SortNoArgs("TaskID")])),ConstType(Sort("List",[SortNoArgs("TaskID")])),ConstType(Sort("List",[SortNoArgs("TaskID")]))],ConstType(SortNoArgs("Result"))))])]),Rules([SDefT("analyze-collect",[],[DefaultVarDec("language"),DefaultVarDec("project-path")],CallT(SVar("analyze-collect"),[Id],[Var("language"),Var("project-path")])),RDefT("analyze-collect",[DefaultVarDec("try-recover")],[DefaultVarDec("language"),DefaultVarDec("project-path")],Rule(NoAnnoList(Op("File",[Var("partition"),Var("initial-ast")])),NoAnnoList(Tuple([NoAnnoList(Op("Result",[Var("partition"),Var("initial-ast"),Var("analyzed-ast"),Var(ListVar("changed-read*")),NoAnnoList(List([])),NoAnnoList(List([])),NoAnnoList(List([]))])),NoAnnoList(Op("DebugResult",[App(CallNoArgs(SVar("length")),Var(ListVar("removed-entry*"))),App(CallNoArgs(SVar("length")),Var(ListVar("added-entry*"))),App(CallNoArgs(SVar("length")),Var(ListVar("removed-task*"))),App(CallNoArgs(SVar("length")),Var(ListVar("added-task*"))),App(CallNoArgs(SVar("length")),Var(ListVar("invalidated-task*")))]))])),[WithClause(Seq(BA(Call(SVar("analysis-core-debug"),[Build(NoAnnoList(Str("\"Collecting: \"")))]),Var("partition")),CallT(SVar("measure-time"),[Seq(CallT(SVar("measure-time"),[Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),Seq(Call(SVar("try"),[Seq(CallNoArgs(SVar("try-recover")),CallNoArgs(SVar("index-recover")))]),Seq(CallT(SVar("index-start-collection"),[],[Var("partition")]),Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),Seq(Call(SVar("try"),[Seq(CallNoArgs(SVar("try-recover")),CallNoArgs(SVar("task-recover")))]),CallT(SVar("task-start-collection"),[],[Var("partition")])))))),Call(SVar("analysis-core-debug-time"),[Build(NoAnnoList(Str("\"Time - setup: \"")))])],[NoAnnoList(Str("\"analyze-collect-setup\""))]),Seq(CallT(SVar("measure-time"),[Assign(Var("analyzed-ast"),App(CallT(SVar("nabl-collect"),[],[Var("partition"),NoAnnoList(Op("Language",[Var("language")]))]),Var("initial-ast"))),Call(SVar("analysis-core-debug-time"),[Build(NoAnnoList(Str("\"Time - collect: \"")))])],[NoAnnoList(Str("\"analyze-collect-collect\""))]),Seq(CallT(SVar("measure-time"),[Seq(AM(CallNoArgs(SVar("index-stop-collection")),NoAnnoList(Tuple([Var(ListVar("removed-entry*")),Var(ListVar("added-entry*"))]))),Seq(AM(CallT(SVar("task-stop-collection"),[],[Var("partition")]),NoAnnoList(Tuple([Var(ListVar("removed-task*")),Var(ListVar("added-task*"))]))),Assign(Var(ListVar("changed-read*")),App(CallNoArgs(SVar("nabl-get-changed-reads")),NoAnnoList(List([Var(ListVar("removed-entry*")),Var(ListVar("added-entry*"))])))))),Call(SVar("analysis-core-debug-time"),[Build(NoAnnoList(Str("\"Time - diff: \"")))])],[NoAnnoList(Str("\"analyze-collect-diff\""))]),CallT(SVar("measure-time"),[AM(CallT(SVar("task-invalidate-task-reads"),[],[Var(ListVar("changed-read*"))]),Var(ListVar("invalidated-task*"))),Call(SVar("analysis-core-debug-time"),[Build(NoAnnoList(Str("\"Time - invalidate: \"")))])],[NoAnnoList(Str("\"analyze-collect-invalidate\""))])))),Id],[NoAnnoList(Str("\"analyze-collect-total\""))])))])),RDefNoArgs("analyze-perform-all",Rule(Var(ListVar("result*")),NoAnnoList(Tuple([Var(ListVar("result'*")),Var(ListVar("evaluated-task*")),Var(ListVar("skipped-task*")),Var(ListVar("unevaluated-task*"))])),[WithClause(CallT(SVar("measure-time"),[Seq(CallT(SVar("measure-time"),[AM(CallNoArgs(SVar("task-evaluate-scheduled")),NoAnnoList(Tuple([Var(ListVar("evaluated-task*")),Var(ListVar("skipped-task*")),Var(ListVar("unevaluated-task*"))]))),Call(SVar("analysis-core-debug-time"),[Build(NoAnnoList(Str("\"Time - evaluation: \"")))])],[NoAnnoList(Str("\"analyze-task-evaluate\""))]),CallT(SVar("measure-time"),[Assign(Var(ListVar("result'*")),App(Call(SVar("map"),[CallNoArgs(SVar("analyze-messages"))]),Var(ListVar("result*")))),Call(SVar("analysis-core-debug-time"),[Build(NoAnnoList(Str("\"Time - messages: \"")))])],[NoAnnoList(Str("\"analyze-task-messages\""))])),Id],[NoAnnoList(Str("\"analyze-task-total\""))]))])),RDefNoArgs("analyze-messages",Rule(NoAnnoList(Tuple([NoAnnoList(Op("Result",[Var("partition"),Var("initial-ast"),Var("analyzed-ast"),Var(ListVar("changed-read*")),Wld,Wld,Wld])),Var("debug-result")])),NoAnnoList(Tuple([NoAnnoList(Op("Result",[Var("partition"),Var("initial-ast"),Var("analyzed-ast"),Var(ListVar("changed-read*")),Var(ListVar("error*")),Var(ListVar("warning*")),Var(ListVar("note*"))])),Var("debug-result")])),[WithClause(Assign(NoAnnoList(Tuple([Var(ListVar("error*")),Var(ListVar("warning*")),Var(ListVar("note*"))])),App(CallNoArgs(SVar("analyze-get-messages")),Var("partition"))))])),RDefNoArgs("analyze-get-messages",Rule(Var("partition"),NoAnnoList(Tuple([Var(ListVar("error*")),Var(ListVar("warning*")),Var(ListVar("note*"))])),[WithClause(Seq(Assign(Var(ListVar("message*")),RootApp(CallT(SVar("task-get-messages"),[],[Var("partition")]))),Seq(Assign(Var(ListVar("error*")),App(Call(SVar("filter"),[Seq(Match(NoAnnoList(Op("Error",[Wld,Wld,Wld]))),CallNoArgs(SVar("analyze-message-to-tuple")))]),Var(ListVar("message*")))),Seq(Assign(Var(ListVar("warning*")),App(Call(SVar("filter"),[Seq(Match(NoAnnoList(Op("Warning",[Wld,Wld,Wld]))),CallNoArgs(SVar("analyze-message-to-tuple")))]),Var(ListVar("message*")))),Assign(Var(ListVar("note*")),App(Call(SVar("filter"),[Seq(Match(NoAnnoList(Op("Note",[Wld,Wld,Wld]))),CallNoArgs(SVar("analyze-message-to-tuple")))]),Var(ListVar("message*"))))))))])),RDefNoArgs("analyze-message-to-tuple",Rule(Var("message"),NoAnnoList(Tuple([App(CallT(SVar("origin-location-offset-set"),[],[Var("origin")]),Var("term")),Var("msg")])),[WithClause(Seq(Assign(Var("origin"),App(CallNoArgs(SVar("task-message-origin")),Var("message"))),Seq(Assign(Var("term"),App(CallNoArgs(SVar("task-message-term")),Var("message"))),Assign(Var("msg"),App(CallNoArgs(SVar("task-message")),Var("message"))))))]))]),Rules([RDefNoArgs("analyze-result-reads",RuleNoCond(NoAnnoList(Op("Result",[Wld,Wld,Wld,Var(ListVar("changed-read*")),Wld,Wld,Wld])),Var(ListVar("changed-read*")))),RDefNoArgs("analyze-result-analyzed-ast",RuleNoCond(NoAnnoList(Op("Result",[Wld,Wld,Var("analyzed-ast"),Wld,Wld,Wld,Wld])),Var("analyzed-ast"))),SDefT("analysis-partition",[],[DefaultVarDec("path"),DefaultVarDec("project-path")],Build(NoAnnoList(StringQuotation1("	                                             ",[StringEscape1("	                                             ",Var("project-path")),QStr("/"),StringEscape1("	                                                            ",Var("path"))]))))]),Rules([SDef("analysis-core-debug",[DefaultVarDec("msg")],Call(SVar("try"),[Call(SVar("analysis-core-debug-interface"),[CallNoArgs(SVar("msg"))])])),SDefNoArgs("analysis-core-debug",Call(SVar("try"),[CallNoArgs(SVar("analysis-core-debug-interface"))])),SDef("analysis-core-debug-interface",[DefaultVarDec("msg")],Fail),SDefNoArgs("analysis-core-debug-interface",Fail),SDef("analysis-core-debug-time",[DefaultVarDec("msg")],Call(SVar("try"),[Call(SVar("analysis-core-debug-time-interface"),[CallNoArgs(SVar("msg"))])])),SDefNoArgs("analysis-core-debug-time",Call(SVar("try"),[CallNoArgs(SVar("analysis-core-debug-time-interface"))])),SDef("analysis-core-debug-time-interface",[DefaultVarDec("msg")],Fail),SDefNoArgs("analysis-core-debug-time-interface",Fail)])])