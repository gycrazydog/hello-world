Module("runtime/analysis/multiple",[Imports([Import("runtime/analysis/core"),Import("runtime/task/core"),Import("runtime/nabl/utils")]),Rules([RDefT("analyze-multiple",[DefaultVarDec("parse-file"),DefaultVarDec("complete-work-unit")],[DefaultVarDec("language"),DefaultVarDec("project-path")],Rule(Var(ListVar("path*")),Var(ListVar("result*")),[WithClause(Seq(CallT(SVar("measure-time"),[Assign(Var(ListVar("file*")),App(Call(SVar("map"),[Seq(Call(SVar("analyze-parse-file"),[CallNoArgs(SVar("parse-file"))]),Where(CallNoArgs(SVar("complete-work-unit"))))]),Var(ListVar("path*")))),Id],[NoAnnoList(Str("\"analyze-parse\""))]),Assign(Var(ListVar("result*")),App(CallT(SVar("analyze-multiple-files"),[CallNoArgs(SVar("complete-work-unit"))],[Var("language"),Var("project-path")]),Var(ListVar("file*"))))))])),RDef("analyze-parse-file",[DefaultVarDec("parse-file")],Rule(Var("path"),NoAnnoList(Op("File",[Var("path"),Var("ast")])),[WithClause(IfThen(Not(Assign(Var("ast"),App(Seq(CallNoArgs(SVar("file-exists")),CallNoArgs(SVar("parse-file"))),Var("path")))),Assign(Var("ast"),NoAnnoList(Tuple([])))))])),RDefT("analyze-multiple-files",[DefaultVarDec("complete-work-unit")],[DefaultVarDec("language"),DefaultVarDec("project-path")],Rule(Var(ListVar("file*")),NoAnnoList(Tuple([Var(ListVar("result'*")),Var(ListVar("evaluated-task*")),Var(ListVar("skipped-task*")),Var(ListVar("unevaluated-task*"))])),[WithClause(Seq(Assign(Var(ListVar("result*")),App(Call(SVar("map"),[Seq(CallT(SVar("analyze-collect"),[],[Var("language"),Var("project-path")]),Where(CallNoArgs(SVar("complete-work-unit"))))]),Var(ListVar("file*")))),Assign(NoAnnoList(Tuple([Var(ListVar("result'*")),Var(ListVar("evaluated-task*")),Var(ListVar("skipped-task*")),Var(ListVar("unevaluated-task*"))])),App(CallNoArgs(SVar("analyze-perform-all")),Var(ListVar("result*"))))))]))])])