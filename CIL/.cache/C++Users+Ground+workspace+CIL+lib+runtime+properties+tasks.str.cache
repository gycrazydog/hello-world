Module("runtime/properties/tasks",[Imports([Import("runtime/nabl/incremental"),Import("runtime/nabl/uri"),Import("runtime/properties/query"),Import("runtime/properties/eq"),Import("runtime/task/core")]),Signature([Constructors([OpDecl("PropCalc",FunType([ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Instruction")))),OpDecl("PropList",FunType([ConstType(Sort("List",[SortNoArgs("Term")]))],ConstType(SortNoArgs("Instruction")))),OpDecl("PropsLookup",FunType([ConstType(SortNoArgs("Property")),ConstType(SortNoArgs("URI"))],ConstType(SortNoArgs("Instruction")))),OpDecl("PropCheck",FunType([ConstType(SortNoArgs("Property")),ConstType(SortNoArgs("Relation")),ConstType(SortNoArgs("Term")),ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Instruction"))))])]),Rules([SDefT("perform-task",[],[DefaultVarDec("n")],Seq(Match(NoAnnoList(Op("PropsLookup",[Var("kind"),RootApp(CallNoArgs(SVar("nabl-uri")))]))),Seq(CallT(SVar("nabl-add-uri-read"),[],[Var("n")]),Seq(CallT(SVar("get-index-properties"),[],[Var("kind")]),Seq(Call(SVar("map"),[CallNoArgs(SVar("fancy-combination"))]),LChoice(CallNoArgs(SVar("concat")),Seq(Call(SVar("filter"),[Match(NoAnnoList(Op("Dependency",[RootApp(Id)])))]),Build(NoAnnoList(Op("Dependency",[RootApp(CallNoArgs(SVar("concat")))])))))))))),SDefT("perform-cyclic-task",[],[DefaultVarDec("n")],Seq(Match(NoAnnoList(Op("PropsLookup",[Var("kind"),RootApp(CallNoArgs(SVar("nabl-uri")))]))),Seq(CallT(SVar("nabl-add-uri-read"),[],[Var("n")]),Seq(CallT(SVar("get-index-properties"),[],[Var("kind")]),Seq(Call(SVar("filter"),[CallNoArgs(SVar("insert-results"))]),Seq(CallNoArgs(SVar("flatten-list")),CallNoArgs(SVar("make-set")))))))),SDefNoArgs("fancy-combination",LChoice(Seq(Match(NoAnnoList(Op("Result",[Wld]))),LChoice(CallNoArgs(SVar("task-result-combinations")),Build(NoAnnoList(List([]))))),LChoice(Seq(CallNoArgs(SVar("task-result-combinations")),Not(Match(NoAnnoList(List([]))))),CallNoArgs(SVar("MkSingleton"))))),RDefT("perform-task",[],[DefaultVarDec("n")],RuleNoCond(NoAnnoList(Op("PropCheck",[Var("kind"),Var("rel"),Var("actual"),Var("expected")])),NoAnnoList(List([App(CallNoArgs(SVar("nabl-property-eq")),NoAnnoList(Tuple([Var("kind"),Var("rel"),NoAnnoList(Tuple([Var("actual"),Var("expected")]))])))]))))])])