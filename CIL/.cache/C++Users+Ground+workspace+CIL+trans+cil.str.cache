Module("cil",[Imports([Import("libstratego-lib"),Import("libstratego-gpp"),Import("libstratego-aterm"),Import("include/CIL"),Import("editor/CIL-Outliner"),Import("lib/editor-common.generated"),ImportWildcard("lib/runtime/index"),ImportWildcard("lib/runtime/nabl"),ImportWildcard("lib/runtime/properties"),ImportWildcard("lib/runtime/types"),ImportWildcard("lib/runtime/task"),ImportWildcard("lib/runtime/analysis"),Import("names"),Import("check"),Import("generate"),Import("pp")]),Rules([SDefNoArgs("editor-analyze",CallNoArgs(SVar("analysis-default-editor"))),SDefNoArgs("analysis-single-default-interface",CallT(SVar("analysis-single-default"),[Id,Id,Id],[RootApp(CallNoArgs(SVar("language")))])),SDefNoArgs("analysis-multiple-default-interface",CallT(SVar("analysis-multiple-default"),[LChoice(CallNoArgs(SVar("parse-file")),Build(NoAnnoList(Tuple([])))),Id,Id,Id],[RootApp(CallNoArgs(SVar("language"))),RootApp(CallNoArgs(SVar("project-path")))])),SDefNoArgs("editor-save",CallT(SVar("analysis-save-default"),[],[RootApp(CallNoArgs(SVar("language")))]))]),Rules([RDefNoArgs("execute-cil",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Op("None",[])),[WithClause(Seq(Assign(Var("dir"),NoAnnoList(Str("\"C:/Windows/Microsoft.NET/Framework/v4.0.30319/ilasm\""))),Seq(BA(Call(SVar("debug"),[Build(NoAnnoList(Str("\"exe\"")))]),Var("path")),Seq(Assign(Var("cfname"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"exe\""))]),Var("path"))),Seq(BA(Call(SVar("try"),[CallNoArgs(SVar("call"))]),NoAnnoList(Tuple([Var("dir"),NoAnnoList(List([NoAnnoList(Str("\"/exe\"")),NoAnnoList(StringQuotation1("		 	                            ",[StringEscape1("		 	                            ",RootApp(CallNoArgs(SVar("project-path")))),QStr("/"),StringEscape1("		 	                                             ",Var("path"))])),NoAnnoList(StringQuotation1("		 	                                                       ",[QStr("/output="),StringEscape1("		 	                                                               ",RootApp(CallNoArgs(SVar("project-path")))),QStr("/"),StringEscape1("		 	                                                                                ",Var("cfname"))]))]))]))),Seq(BA(CallNoArgs(SVar("refresh-workspace-file")),Var("cfname")),Seq(Assign(Var("rundir"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("project-path"),NoAnnoList(Str("\"/\"")),Var("cfname")])))),BA(Call(SVar("try"),[CallNoArgs(SVar("call"))]),NoAnnoList(Tuple([Var("rundir"),NoAnnoList(List([]))]))))))))))])),RDefNoArgs("editor-resolve",Rule(NoAnnoList(Tuple([Var("node"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),Var("definition"),Assign(Var("definition"),App(CallT(SVar("analysis-resolve"),[],[RootApp(CallNoArgs(SVar("language"))),Var("project-path")]),Var("node"))))),RDefNoArgs("editor-hover",RuleNoCond(NoAnnoList(Tuple([Var("target"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),RootApp(Fail))),RDefNoArgs("editor-complete",Rule(NoAnnoList(Tuple([Var("node"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),Var("proposals"),Assign(Var("proposals"),App(CallT(SVar("analysis-propose-completions"),[],[RootApp(CallNoArgs(SVar("language"))),Var("project-path")]),Var("ast"))))),RDefNoArgs("editor-format",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(Assign(Var("ext"),App(CallNoArgs(SVar("get-extension")),Var("path"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(StringQuotation1("                                          ",[QStr("pp."),StringEscape1("                                             ",Var("ext"))]))]),Var("path"))),Assign(Var("result"),App(CallNoArgs(SVar("pp-debug")),Var("selected"))))))]))]),Rules([RDefNoArgs("debug-show-aterm",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"aterm\""))]),Var("path"))),Assign(Var("result"),Var("selected"))))])),RDefNoArgs("debug-show-analyzed",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"analyzed.aterm\""))]),Var("path"))),Assign(Var("result"),Var("ast"))))])),SDefNoArgs("debug-index-project",CallT(SVar("analysis-debug-index-project"),[],[RootApp(CallNoArgs(SVar("language")))])),SDefNoArgs("debug-index-partition",CallT(SVar("analysis-debug-index-partition"),[],[RootApp(CallNoArgs(SVar("language")))])),SDefNoArgs("debug-task-project",CallT(SVar("analysis-debug-task-project"),[],[RootApp(CallNoArgs(SVar("language")))])),SDefNoArgs("debug-task-partition",CallT(SVar("analysis-debug-task-partition"),[],[RootApp(CallNoArgs(SVar("language")))])),SDefNoArgs("debug-task-selection",CallT(SVar("analysis-debug-task-selection"),[],[RootApp(CallNoArgs(SVar("language")))])),SDefNoArgs("debug-project",CallT(SVar("analysis-debug-project"),[],[RootApp(CallNoArgs(SVar("language")))])),SDefNoArgs("debug-partition",CallT(SVar("analysis-debug-partition"),[],[RootApp(CallNoArgs(SVar("language")))])),SDefNoArgs("debug-reanalyze",CallT(SVar("analysis-debug-reanalyze"),[],[RootApp(CallNoArgs(SVar("language")))]))])])