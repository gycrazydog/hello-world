Module("runtime/task/core",[Imports([Import("runtime/task/interface"),Import("runtime/task/utils")]),Signature([Sorts([SortNoArgs("Result"),SortNoArgs("Instruction")]),Constructors([OpDecl("Result",FunType([ConstType(SortNoArgs("TaskID"))],ConstType(SortNoArgs("Result")))),OpDecl("Fail",ConstType(SortNoArgs("Result"))),OpDecl("Single",FunType([ConstType(Sort("List",[SortNoArgs("Result")]))],ConstType(SortNoArgs("Result")))),OpDecl("Dependency",FunType([ConstType(Sort("List",[SortNoArgs("TaskID")]))],ConstType(SortNoArgs("Result"))))])]),Rules([SDef("tdebug",[DefaultVarDec("s")],Id),SDefT("new-task",[],[DefaultVarDec("partition")],CallT(SVar("new-task"),[],[Var("partition"),RootApp(CallNoArgs(SVar("dependent-tasks")))])),RDefT("new-task",[],[DefaultVarDec("partition"),DefaultVarDec("dependencies")],Rule(Var("instruction"),Var("result"),[WithClause(Seq(Assign(Var("is-combinator"),App(LChoice(Seq(CallNoArgs(SVar("task-is-combinator")),Build(NoAnnoList(Int("1")))),Build(NoAnnoList(Int("0")))),Var("instruction"))),Seq(Assign(Var("short-circuit"),App(LChoice(Seq(CallNoArgs(SVar("task-short-circuit")),Build(NoAnnoList(Int("1")))),Build(NoAnnoList(Int("0")))),Var("instruction"))),Assign(Var("result"),App(CallT(SVar("task-add-task"),[],[Var("partition"),Var("dependencies"),Var("instruction"),Var("is-combinator"),Var("short-circuit")]),Var("instruction"))))))])),SDefNoArgs("dependent-tasks",Seq(Call(SVar("collect-all"),[CallNoArgs(SVar("dependent-task")),CallNoArgs(SVar("union"))]),Seq(CallNoArgs(SVar("flatten-list")),CallNoArgs(SVar("make-set"))))),SDefNoArgs("dependent-task",Match(NoAnnoList(Op("Result",[RootApp(Id)])))),SDefNoArgs("dependent-task",Seq(CallNoArgs(SVar("has-annos")),Seq(CallNoArgs(SVar("get-annos")),CallNoArgs(SVar("dependent-tasks"))))),SDefNoArgs("task-create-execute-ctx",Build(NoAnnoList(Str("\"\"")))),RDef("task-create-execute",[DefaultVarDec("create-task")],Rule(Var("term"),Var("result"),[WithClause(Seq(Assign(Var("ctx"),RootApp(CallNoArgs(SVar("task-create-execute-ctx")))),Seq(CallNoArgs(SVar("task-push")),Seq(CallT(SVar("task-start-collection"),[],[Var("ctx")]),Seq(Assign(NoAnnoList(Op("Result",[Var("taskID")])),App(CallNoArgs(SVar("create-task")),Var("term"))),Seq(CallT(SVar("task-stop-collection"),[],[Var("ctx")]),Seq(BA(CallNoArgs(SVar("task-evaluate-now")),Var("taskID")),Seq(Assign(Var("result"),App(CallNoArgs(SVar("task-get-result")),Var("taskID"))),CallNoArgs(SVar("task-pop"))))))))))]))]),Rules([SDefNoArgs("task-create-dependencies",Seq(Call(SVar("collect-all-annos"),[Match(NoAnnoList(Op("Result",[RootApp(Id)]))),CallNoArgs(SVar("union"))]),Build(NoAnnoList(Op("Dependency",[RootApp(Id)]))))),SDefNoArgs("task-create-dependency",Build(NoAnnoList(Op("Dependency",[NoAnnoList(List([RootApp(Id)]))])))),SDefNoArgs("task-has-dependencies",Where(Call(SVar("collect-one-annos"),[Match(NoAnnoList(Op("Dependency",[Wld])))]))),SDefNoArgs("task-collect-dependencies",Seq(Call(SVar("collect-all-annos"),[Match(NoAnnoList(Op("Dependency",[RootApp(Id)]))),CallNoArgs(SVar("union"))]),Seq(CallNoArgs(SVar("concat")),Seq(Where(CallNoArgs(SVar("Hd"))),Build(NoAnnoList(Op("Dependency",[RootApp(Id)])))))))]),Rules([SDefT("insert-results-hashmap",[],[DefaultVarDec("results-hashmap")],SwitchChoice(Id,[SwitchCase(CallNoArgs(SVar("has-annos")),Seq(Match(Var("t")),Seq(Build(NoAnnoList(Tuple([App(CallT(SVar("insert-results-hashmap-noannos"),[],[Var("results-hashmap")]),Var("t")),App(Seq(CallNoArgs(SVar("get-annos")),CallT(SVar("insert-results-hashmap"),[],[Var("results-hashmap")])),Var("t"))]))),CallNoArgs(SVar("set-annos")))))],CallT(SVar("insert-results-hashmap-noannos"),[],[Var("results-hashmap")]))),SDefT("insert-results-hashmap-noannos",[],[DefaultVarDec("results-hashmap")],SwitchChoice(Id,[SwitchCase(CallNoArgs(SVar("is-list")),Call(SVar("filter"),[CallT(SVar("insert-results-hashmap"),[],[Var("results-hashmap")])])),SwitchCase(Match(NoAnnoList(Op("Result",[Var("n")]))),Call(SVar("try"),[BA(CallT(SVar("hashtable-get"),[],[Var("n")]),Var("results-hashmap"))]))],All(CallT(SVar("insert-results-hashmap"),[],[Var("results-hashmap")])))),SDefNoArgs("insert-results-with-fail",SwitchChoice(Id,[SwitchCase(CallNoArgs(SVar("has-annos")),Seq(Build(NoAnnoList(Tuple([RootApp(Id),RootApp(Seq(CallNoArgs(SVar("get-annos")),CallNoArgs(SVar("insert-results-with-fail"))))]))),CallNoArgs(SVar("set-annos")))),SwitchCase(CallNoArgs(SVar("is-list")),Call(SVar("filter"),[CallNoArgs(SVar("insert-results-with-fail"))])),SwitchCase(Match(NoAnnoList(Op("Result",[Var("n")]))),LChoice(CallT(SVar("task-api-get-results"),[],[Var("n")]),LChoice(Seq(CallT(SVar("task-api-has-failed"),[],[Var("n")]),Build(NoAnnoList(List([])))),CallT(SVar("with"),[Fail],[NoAnnoList(Str("\"Cannot insert result: \""))]))))],All(CallNoArgs(SVar("insert-results-with-fail"))))),SDefNoArgs("insert-results",SwitchChoice(Id,[SwitchCase(CallNoArgs(SVar("has-annos")),Seq(Build(NoAnnoList(Tuple([RootApp(Id),RootApp(Seq(CallNoArgs(SVar("get-annos")),CallNoArgs(SVar("insert-results"))))]))),CallNoArgs(SVar("set-annos")))),SwitchCase(CallNoArgs(SVar("is-list")),Call(SVar("map"),[CallNoArgs(SVar("insert-results"))])),SwitchCase(Match(NoAnnoList(Op("Result",[Var("n")]))),LChoice(CallT(SVar("task-api-get-results"),[],[Var("n")]),Seq(CallT(SVar("task-api-has-failed"),[],[Var("n")]),Build(NoAnnoList(List([]))))))],All(CallNoArgs(SVar("insert-results"))))),SDefNoArgs("insert-results-or-create-dependency",SwitchChoice(Id,[SwitchCase(CallNoArgs(SVar("has-annos")),Seq(Build(NoAnnoList(Tuple([RootApp(Id),RootApp(Seq(CallNoArgs(SVar("get-annos")),CallNoArgs(SVar("insert-results-or-create-dependency"))))]))),CallNoArgs(SVar("set-annos")))),SwitchCase(CallNoArgs(SVar("is-list")),Call(SVar("map"),[CallNoArgs(SVar("insert-results-or-create-dependency"))])),SwitchCase(Match(NoAnnoList(Op("Result",[Var("n")]))),LChoice(CallT(SVar("task-api-get-results"),[],[Var("n")]),LChoice(Seq(CallT(SVar("task-api-has-failed"),[],[Var("n")]),Build(NoAnnoList(List([])))),Build(NoAnnoList(Op("Dependency",[NoAnnoList(List([Var("n")]))]))))))],All(CallNoArgs(SVar("insert-results-or-create-dependency")))))]),Rules([RDefNoArgs("task-result-id",RuleNoCond(NoAnnoList(Op("Result",[Var("taskID")])),Var("taskID"))),SDefNoArgs("task-collect-result-ids",Call(SVar("collect-all-annos"),[CallNoArgs(SVar("task-result-id")),CallNoArgs(SVar("union"))]))]),Rules([SDefT("task-add-message",[],[DefaultVarDec("taskID"),DefaultVarDec("message")],CallT(SVar("task-api-add-message"),[],[Var("taskID"),Var("message")])),SDefT("task-add-task",[],[DefaultVarDec("partition"),DefaultVarDec("dependencies"),DefaultVarDec("instruction"),DefaultVarDec("isCombinator"),DefaultVarDec("shortCircuit")],CallT(SVar("task-api-add-task"),[],[Var("partition"),Var("dependencies"),Var("instruction"),Var("isCombinator"),Var("shortCircuit")])),SDefT("task-becomes-cyclic",[],[DefaultVarDec("taskIDFrom"),DefaultVarDec("taskIDTo")],CallT(SVar("task-api-becomes-cyclic"),[],[Var("taskIDFrom"),Var("taskIDTo")])),SDefNoArgs("task-clear-partition",CallT(SVar("task-api-clear-partition"),[],[RootApp(Id)])),SDefT("task-debug-info",[],[DefaultVarDec("partition")],CallT(SVar("task-api-debug-info"),[],[Var("partition")])),SDefNoArgs("task-evaluate-now",CallT(SVar("task-api-evaluate-now"),[CallNoArgs(SVar("task-collect-result-ids")),CallNoArgs(SVar("insert-results-hashmap")),CallNoArgs(SVar("task-perform-task"))],[RootApp(Id)])),SDefNoArgs("task-evaluate-scheduled",Call(SVar("task-api-evaluate-scheduled"),[CallNoArgs(SVar("task-collect-result-ids")),CallNoArgs(SVar("insert-results-hashmap")),CallNoArgs(SVar("task-perform-task"))])),SDefT("task-exists",[],[DefaultVarDec("instruction")],CallT(SVar("task-api-exists"),[],[Var("instruction")])),SDefT("task-get-messages",[],[DefaultVarDec("partition")],CallT(SVar("task-api-get-messages"),[],[Var("partition")])),SDefNoArgs("task-get-readers",CallT(SVar("task-api-get-readers"),[],[RootApp(Id)])),SDefT("task-invalidate-task-reads",[],[DefaultVarDec(ListVar("changedRead*"))],CallT(SVar("task-api-invalidate-task-reads"),[],[Var(ListVar("changedRead*"))])),SDefNoArgs("task-merge",CallNoArgs(SVar("task-api-merge"))),SDefT("task-partitions-of",[],[DefaultVarDec(ListVar("taskIDOrTaskID*"))],CallT(SVar("task-api-partitions-of"),[],[Var(ListVar("taskIDOrTaskID*"))])),SDefNoArgs("task-persist",CallNoArgs(SVar("task-api-persist"))),SDefNoArgs("task-pop",CallNoArgs(SVar("task-api-pop"))),SDefNoArgs("task-push",CallNoArgs(SVar("task-api-push"))),SDefNoArgs("task-recover",CallNoArgs(SVar("task-api-recover"))),SDefNoArgs("task-reset",CallNoArgs(SVar("task-api-reset"))),SDefNoArgs("task-result-combinations",CallT(SVar("task-api-result-combinations"),[CallNoArgs(SVar("task-collect-result-ids")),CallNoArgs(SVar("insert-results-hashmap"))],[RootApp(Id)])),SDefT("task-setup",[],[DefaultVarDec("project-path")],CallT(SVar("task-api-setup"),[],[Var("project-path")])),SDefNoArgs("task-setup",CallT(SVar("task-api-setup"),[],[RootApp(Id)])),SDefT("task-start-collection",[],[DefaultVarDec("partition")],CallT(SVar("task-api-start-collection"),[],[Var("partition")])),SDefT("task-stop-collection",[],[DefaultVarDec("partition")],CallT(SVar("task-api-stop-collection"),[],[Var("partition")])),SDefNoArgs("task-unload",CallT(SVar("task-unload"),[],[RootApp(Id)])),SDefT("task-unload",[],[DefaultVarDec("project-path")],CallT(SVar("task-api-unload"),[],[Var("project-path")])),SDefNoArgs("task-get-result",SwitchChoice(Id,[SwitchCase(Match(NoAnnoList(Op("Result",[Var("taskID")]))),CallT(SVar("task-api-get-results"),[],[Var("taskID")]))],CallT(SVar("task-api-get-results"),[],[RootApp(Id)]))),SDefNoArgs("task-has-failed",SwitchChoice(Id,[SwitchCase(Match(NoAnnoList(Op("Result",[Var("taskID")]))),CallT(SVar("task-api-has-failed"),[],[Var("taskID")]))],CallT(SVar("task-api-has-failed"),[],[RootApp(Id)]))),SDefNoArgs("task-get-solved",SwitchChoice(Id,[SwitchCase(Match(NoAnnoList(Op("Result",[Var("taskID")]))),LChoice(CallT(SVar("task-api-get-results"),[],[Var("taskID")]),Seq(CallT(SVar("task-api-has-failed"),[],[Var("taskID")]),Build(NoAnnoList(List([]))))))],LChoice(CallT(SVar("task-api-has-failed"),[],[RootApp(Id)]),Seq(CallT(SVar("task-api-has-failed"),[],[RootApp(Id)]),Build(NoAnnoList(List([]))))))),RDefNoArgs("task-get-dependencies",RuleNoCond(Var("taskID"),RootApp(CallT(SVar("task-api-get-dependencies"),[],[Var("taskID")])))),RDefT("task-add-read",[],[DefaultVarDec("taskID")],RuleNoCond(Var("read"),RootApp(CallT(SVar("task-api-add-read"),[],[Var("taskID"),Var("read")])))),RDefT("task-add-dependency",[],[DefaultVarDec("taskID")],RuleNoCond(Var("dependency"),RootApp(CallT(SVar("task-api-add-dependency"),[],[Var("taskID"),Var("dependency")])))),RDefT("task-add-dependency-nocycle",[],[DefaultVarDec("taskID")],RuleNoCond(Var("dependency"),RootApp(LChoice(Seq(Not(CallT(SVar("task-becomes-cyclic"),[],[Var("taskID"),Var("dependency")])),CallT(SVar("task-api-add-dependency"),[],[Var("taskID"),Var("dependency")])),Id)))),RDefNoArgs("task-instruction-id",RuleNoCond(Var("instruction"),RootApp(CallT(SVar("task-api-task-id"),[],[Var("instruction")])))),SDefT("task-perform-task",[],[DefaultVarDec("nr")],CallT(SVar("perform-task"),[],[Var("nr")]))]),Rules([SDefT("task-api-add-dependency",[],[DefaultVarDec("taskID"),DefaultVarDec("dependency")],Prim("\"task_api_add_dependency\"",[Var("taskID"),Var("dependency")])),SDefT("task-api-add-message",[],[DefaultVarDec("taskID"),DefaultVarDec("message")],Prim("\"task_api_add_message\"",[Var("taskID"),Var("message")])),SDefT("task-api-add-read",[],[DefaultVarDec("taskID"),DefaultVarDec("read")],Prim("\"task_api_add_read\"",[Var("taskID"),Var("read")])),SDefT("task-api-add-task",[],[DefaultVarDec("partition"),DefaultVarDec("dependencies"),DefaultVarDec("instruction"),DefaultVarDec("isCombinator"),DefaultVarDec("shortCircuit")],Prim("\"task_api_add_task\"",[Var("partition"),Var("dependencies"),Var("instruction"),Var("isCombinator"),Var("shortCircuit")])),SDefT("task-api-becomes-cyclic",[],[DefaultVarDec("taskIDFrom"),DefaultVarDec("taskIDTo")],Prim("\"task_api_becomes_cyclic\"",[Var("taskIDFrom"),Var("taskIDTo")])),SDefT("task-api-clear-partition",[],[DefaultVarDec("partition")],Prim("\"task_api_clear_partition\"",[Var("partition")])),SDefT("task-api-debug-info",[],[DefaultVarDec("partition")],Prim("\"task_api_debug_info\"",[Var("partition")])),SDefT("task-api-evaluate-now",[DefaultVarDec("collect"),DefaultVarDec("insert"),DefaultVarDec("perform")],[DefaultVarDec("taskIDs")],PrimT("\"task_api_evaluate_now\"",[CallNoArgs(SVar("collect")),CallNoArgs(SVar("insert")),CallNoArgs(SVar("perform"))],[Var("taskIDs")])),SDefT("task-api-evaluate-scheduled",[DefaultVarDec("collect"),DefaultVarDec("insert"),DefaultVarDec("perform")],[],PrimT("\"task_api_evaluate_scheduled\"",[CallNoArgs(SVar("collect")),CallNoArgs(SVar("insert")),CallNoArgs(SVar("perform"))],[])),SDefT("task-api-exists",[],[DefaultVarDec("instruction")],Prim("\"task_api_exists\"",[Var("instruction")])),SDefT("task-api-get-dependencies",[],[DefaultVarDec("taskID")],Prim("\"task_api_get_dependencies\"",[Var("taskID")])),SDefT("task-api-get-messages",[],[DefaultVarDec("partition")],Prim("\"task_api_get_messages\"",[Var("partition")])),SDefT("task-api-get-readers",[],[DefaultVarDec("uri")],Prim("\"task_api_get_readers\"",[Var("uri")])),SDefT("task-api-get-results",[],[DefaultVarDec("taskID")],Prim("\"task_api_get_results\"",[Var("taskID")])),SDefT("task-api-has-failed",[],[DefaultVarDec("taskID")],Prim("\"task_api_has_failed\"",[Var("taskID")])),SDefT("task-api-invalidate-task-reads",[],[DefaultVarDec("changedReads")],Prim("\"task_api_invalidate_task_reads\"",[Var("changedReads")])),SDefNoArgs("task-api-merge",PrimNoArgs("\"task_api_merge\"")),SDefT("task-api-partitions-of",[],[DefaultVarDec("taskIDOrTaskIDS")],Prim("\"task_api_partitions_of\"",[Var("taskIDOrTaskIDS")])),SDefNoArgs("task-api-persist",PrimNoArgs("\"task_api_persist\"")),SDefNoArgs("task-api-pop",PrimNoArgs("\"task_api_pop\"")),SDefNoArgs("task-api-push",PrimNoArgs("\"task_api_push\"")),SDefNoArgs("task-api-recover",PrimNoArgs("\"task_api_recover\"")),SDefNoArgs("task-api-reset",PrimNoArgs("\"task_api_reset\"")),SDefT("task-api-result-combinations",[DefaultVarDec("collect-results"),DefaultVarDec("insert-results")],[DefaultVarDec("term")],PrimT("\"task_api_result_combinations\"",[CallNoArgs(SVar("collect-results")),CallNoArgs(SVar("insert-results"))],[Var("term")])),SDefT("task-api-setup",[],[DefaultVarDec("project-path")],Prim("\"task_api_setup\"",[Var("project-path")])),SDefT("task-api-start-collection",[],[DefaultVarDec("partition")],Prim("\"task_api_start_collection\"",[Var("partition")])),SDefT("task-api-stop-collection",[],[DefaultVarDec("partition")],Prim("\"task_api_stop_collection\"",[Var("partition")])),SDefT("task-api-task-id",[],[DefaultVarDec("instruction")],Prim("\"task_api_task_id\"",[Var("instruction")])),SDefT("task-api-unload",[],[DefaultVarDec("project-path")],Prim("\"task_api_unload\"",[Var("project-path")]))])])