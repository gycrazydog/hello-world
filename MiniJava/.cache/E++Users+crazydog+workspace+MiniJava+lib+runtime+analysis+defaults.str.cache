Module("runtime/analysis/defaults",[Imports([Import("runtime/analysis/core"),Import("runtime/analysis/single"),Import("runtime/analysis/multiple"),Import("runtime/nabl/utils"),Import("runtime/index/core"),Import("runtime/task/core"),Import("runtime/editor/editor"),Import("runtime/editor/queue")]),Rules([SDefNoArgs("analysis-default-editor",LChoice(CallNoArgs(SVar("analysis-single-default-interface")),Seq(Where(Not(CallNoArgs(SVar("is-tuple")))),CallNoArgs(SVar("analysis-multiple-default-queue"))))),SDefNoArgs("analysis-default-cmd",LChoice(CallNoArgs(SVar("analysis-single-default-interface")),Seq(Where(Not(CallNoArgs(SVar("is-tuple")))),CallNoArgs(SVar("analysis-multiple-default-interface"))))),RDefNoArgs("analysis-changed-partitions",RuleNoCond(Var(ListVar("taskID*")),RootApp(CallT(SVar("task-partitions-of"),[],[Var(ListVar("taskID*"))])))),SDefNoArgs("is-test-file",CallT(SVar("string-ends-with"),[],[NoAnnoList(Str("\".spt\""))]))]),Rules([SDefNoArgs("analysis-single-default-interface",Fail),RDefT("analysis-single-default",[DefaultVarDec("desugar-before"),DefaultVarDec("desugar-after"),DefaultVarDec("pp-message")],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("analyzed-ast"),Var(ListVar("error*")),Var(ListVar("warning*")),Var(ListVar("note*"))])),[WithClause(Seq(CallNoArgs(SVar("editor-init")),Seq(BA(Call(SVar("analysis-default-debug"),[Build(NoAnnoList(Str("\"Analyzing file: \"")))]),Var("path")),Seq(Assign(NoAnnoList(Tuple([Var("analyzed-ast"),NoAnnoList(Tuple([Var(ListVar("analysis-error*")),Var(ListVar("analysis-warning*")),Var(ListVar("analysis-note*"))])),Var("removed-entry-count"),Var("added-entry-count"),Var("removed-task-count"),Var("added-task-count"),Var("invalidated-task-count"),Var(ListVar("evaluated-task*")),Var(ListVar("skipped-task*")),Var(ListVar("unevaluated-task*"))])),App(Seq(CallNoArgs(SVar("desugar-before")),Seq(CallT(SVar("analyze-one"),[],[Var("language"),Var("path"),Var("project-path")]),CallNoArgs(SVar("desugar-after")))),Var("ast"))),Seq(Assign(NoAnnoList(Tuple([Var(ListVar("error*")),Var(ListVar("warning*")),Var(ListVar("note*"))])),App(CallT(SVar("analysis-message-collect"),[CallNoArgs(SVar("pp-message"))],[Var(ListVar("analysis-error*")),Var(ListVar("analysis-warning*")),Var(ListVar("analysis-note*"))]),Var("analyzed-ast"))),Seq(Assign(Var(ListVar("partition*")),App(CallNoArgs(SVar("analysis-changed-partitions")),Var(ListVar("evaluated-task*")))),Seq(IfThen(BA(Not(CallNoArgs(SVar("is-test-file"))),Var("path")),Seq(Assign(Var("partition"),RootApp(CallT(SVar("analysis-partition"),[],[Var("path"),Var("project-path")]))),BA(Seq(Call(SVar("remove-all"),[LChoice(Match(Var("partition")),Match(Var("path")))]),CallT(SVar("analysis-message-update-partitions-queue"),[],[Var("language"),Var("project-path")])),Var(ListVar("partition*"))))),BA(CallNoArgs(SVar("analysis-debug-results")),NoAnnoList(Tuple([Var("removed-entry-count"),Var("added-entry-count"),Var("removed-task-count"),Var("added-task-count"),Var("invalidated-task-count"),Var(ListVar("evaluated-task*")),Var(ListVar("skipped-task*")),Var(ListVar("unevaluated-task*"))]))))))))))]))]),Rules([SDefNoArgs("analysis-multiple-default-interface",Fail),RDefNoArgs("analysis-multiple-default-queue",Rule(Var(ListVar("path*")),NoAnnoList(Op("None",[])),[WithClause(CallT(SVar("queue-strategy"),[],[NoAnnoList(Str("\"analysis-multiple-default-interface\"")),NoAnnoList(Str("\"Analyzing files\""))]))])),RDefT("analysis-multiple-default",[DefaultVarDec("parse"),DefaultVarDec("desugar-before"),DefaultVarDec("desugar-after"),DefaultVarDec("pp-message")],[DefaultVarDec("language"),DefaultVarDec("project-path")],Rule(Var(ListVar("path*")),NoAnnoList(Tuple([Var(ListVar("analysis-result'*")),Var(ListVar("evaluated-task*")),Var(ListVar("unevaluated-task*"))])),[WithClause(Seq(Call(SVar("analysis-default-debug"),[Build(NoAnnoList(Str("\"Analyzing files: \"")))]),Seq(CallNoArgs(SVar("analysis-multiple-default-work-units")),Seq(CallNoArgs(SVar("set-total-work-units")),Seq(CallT(SVar("measure-time"),[Seq(CallT(SVar("measure-time"),[Seq(Assign(Var(ListVar("path'*")),App(Call(SVar("map"),[LRule(RuleNoCond(Var("p"),NoAnnoList(StringQuotation1("	      	                       ",[StringEscape1("	      	                       ",Var("project-path")),QStr("/"),StringEscape1("	      	                                      ",Var("p"))]))))]),Var(ListVar("path*")))),Seq(Assign(NoAnnoList(Tuple([Var(ListVar("result*")),Var(ListVar("evaluated-task*")),Var(ListVar("skipped-task*")),Var(ListVar("unevaluated-task*"))])),App(CallT(SVar("analyze-multiple"),[Seq(CallNoArgs(SVar("parse")),CallNoArgs(SVar("desugar-before"))),CallNoArgs(SVar("complete-work-unit"))],[Var("language"),Var("project-path")]),Var(ListVar("path'*")))),Assign(NoAnnoList(Tuple([Var(ListVar("analysis-result*")),Var(ListVar("debug-result*"))])),App(CallNoArgs(SVar("unzip")),Var(ListVar("result*")))))),Call(SVar("analysis-default-debug-time"),[Build(NoAnnoList(Str("\"Time - analysis: \"")))])],[NoAnnoList(Str("\"analysis-multiple-full-analysis\""))]),Seq(CallT(SVar("measure-time"),[Assign(Var(ListVar("analysis-result'*")),App(Call(SVar("filter"),[Call(SVar("analysis-update-editor"),[CallNoArgs(SVar("desugar-after")),CallNoArgs(SVar("pp-message"))])]),Var(ListVar("analysis-result*")))),Call(SVar("analysis-default-debug-time"),[Build(NoAnnoList(Str("\"Time - messages: \"")))])],[NoAnnoList(Str("\"analysis-multiple-update-editors\""))]),Seq(CallT(SVar("measure-time"),[CallNoArgs(SVar("index-persist")),Call(SVar("analysis-default-debug-time"),[Build(NoAnnoList(Str("\"Time - index persistance: \"")))])],[NoAnnoList(Str("\"analysis-multiple-index-persist\""))]),CallT(SVar("measure-time"),[CallNoArgs(SVar("task-persist")),Call(SVar("analysis-default-debug-time"),[Build(NoAnnoList(Str("\"Time - task engine persistance: \"")))])],[NoAnnoList(Str("\"analysis-multiple-task-persist\""))])))),Call(SVar("analysis-default-debug-time"),[Build(NoAnnoList(Str("\"Time - total: \"")))])],[NoAnnoList(Str("\"analysis-multiple-total\""))]),CallT(SVar("measure-time"),[Seq(Assign(NoAnnoList(Op("DebugResult",[Var("removed-entry-count"),Var("added-entry-count"),Var("removed-task-count"),Var("added-task-count"),Var("invalidated-task-count")])),App(CallNoArgs(SVar("analysis-accumulate-debug-results")),Var(ListVar("debug-result*")))),BA(CallNoArgs(SVar("analysis-debug-results")),NoAnnoList(Tuple([Var("removed-entry-count"),Var("added-entry-count"),Var("removed-task-count"),Var("added-task-count"),Var("invalidated-task-count"),Var(ListVar("evaluated-task*")),Var(ListVar("skipped-task*")),Var(ListVar("unevaluated-task*"))])))),Call(SVar("analysis-default-debug-time"),[Build(NoAnnoList(Str("\"Time - debug: \"")))])],[NoAnnoList(Str("\"analysis-multiple-debug\""))]))))))])),SDefNoArgs("analysis-accumulate-debug-results",Seq(Build(NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Op("DebugResult",[NoAnnoList(Int("0")),NoAnnoList(Int("0")),NoAnnoList(Int("0")),NoAnnoList(Int("0")),NoAnnoList(Int("0"))]))]))),Call(SVar("foldl"),[CallNoArgs(SVar("analysis-concat-debug-result"))]))),RDefNoArgs("analysis-concat-debug-result",Rule(NoAnnoList(Tuple([NoAnnoList(Op("DebugResult",[Var("removed-entry1-count"),Var("added-entry1-count"),Var("removed-task1-count"),Var("added-task1-count"),Var("invalidated-task1-count")])),NoAnnoList(Op("DebugResult",[Var("removed-entry2-count"),Var("added-entry2-count"),Var("removed-task2-count"),Var("added-task2-count"),Var("invalidated-task2-count")]))])),NoAnnoList(Op("DebugResult",[Var("removed-entry-count"),Var("added-entry-count"),Var("removed-task-count"),Var("added-task-count"),Var("invalidated-task-count")])),[WithClause(Seq(Assign(Var("removed-entry-count"),App(CallNoArgs(SVar("add")),NoAnnoList(Tuple([Var("removed-entry1-count"),Var("removed-entry2-count")])))),Seq(Assign(Var("added-entry-count"),App(CallNoArgs(SVar("add")),NoAnnoList(Tuple([Var("added-entry1-count"),Var("added-entry2-count")])))),Seq(Assign(Var("removed-task-count"),App(CallNoArgs(SVar("add")),NoAnnoList(Tuple([Var("removed-task1-count"),Var("removed-task2-count")])))),Seq(Assign(Var("added-task-count"),App(CallNoArgs(SVar("add")),NoAnnoList(Tuple([Var("added-task1-count"),Var("added-task2-count")])))),Assign(Var("invalidated-task-count"),App(CallNoArgs(SVar("add")),NoAnnoList(Tuple([Var("invalidated-task1-count"),Var("invalidated-task2-count")])))))))))])),RDef("analysis-update-editor",[DefaultVarDec("desugar-after"),DefaultVarDec("pp-message")],Rule(NoAnnoList(Op("Result",[Var("partition"),Var("initial-ast"),Var("analyzed-ast"),Var(ListVar("changed-read*")),Var(ListVar("error*")),Var(ListVar("warning*")),Var(ListVar("note*"))])),NoAnnoList(Op("Result",[Var("partition"),Var("initial-ast"),Var("analyzed-desugared-ast"),Var(ListVar("changed-read*")),Var(ListVar("error'*")),Var(ListVar("warning'*")),Var(ListVar("note'*"))])),[WhereClause(Not(Assign(NoAnnoList(Tuple([])),Var("initial-ast")))),WithClause(Seq(Assign(Var("analyzed-desugared-ast"),App(CallNoArgs(SVar("desugar-after")),Var("analyzed-ast"))),Seq(Assign(NoAnnoList(Tuple([Var(ListVar("error'*")),Var(ListVar("warning'*")),Var(ListVar("note'*"))])),App(CallT(SVar("analysis-message-collect"),[CallNoArgs(SVar("pp-message"))],[Var(ListVar("error*")),Var(ListVar("warning*")),Var(ListVar("note*"))]),Var("analyzed-desugared-ast"))),BA(CallT(SVar("set-markers"),[],[Var("partition")]),NoAnnoList(Tuple([Var("analyzed-ast"),Var(ListVar("error'*")),Var(ListVar("warning'*")),Var(ListVar("note'*"))]))))))])),SDefNoArgs("analysis-multiple-default-work-units",Seq(CallNoArgs(SVar("length")),Seq(Build(NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Int("3"))]))),CallNoArgs(SVar("mul")))))]),Rules([SDefNoArgs("constraint-error",Fail),SDefNoArgs("constraint-warning",Fail),SDefNoArgs("constraint-note",Fail),SDefNoArgs("enable-wrapped-message-collect",Fail),SDef("message-collect-wrapped",[DefaultVarDec("s")],Fail),RDefT("analysis-message-collect",[DefaultVarDec("pp-message")],[DefaultVarDec(ListVar("analysis-error*")),DefaultVarDec(ListVar("analysis-warning*")),DefaultVarDec(ListVar("analysis-note*"))],Rule(Var("ast"),NoAnnoList(Tuple([NoAnnoList(List([App(Call(SVar("map"),[CallNoArgs(SVar("pp-message"))]),Var(ListVar("analysis-error*"))),Var(ListVar("error*"))])),NoAnnoList(List([App(Call(SVar("map"),[CallNoArgs(SVar("pp-message"))]),Var(ListVar("analysis-warning*"))),Var(ListVar("warning*"))])),NoAnnoList(List([App(Call(SVar("map"),[CallNoArgs(SVar("pp-message"))]),Var(ListVar("analysis-note*"))),Var(ListVar("note*"))]))])),[WithClause(CondChoice(CallNoArgs(SVar("enable-wrapped-message-collect")),Call(SVar("message-collect-wrapped"),[Seq(Assign(Var(ListVar("error*")),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-error")),CallNoArgs(SVar("conc"))]),Var("ast"))),Seq(Assign(Var(ListVar("warning*")),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-warning")),CallNoArgs(SVar("conc"))]),Var("ast"))),Assign(Var(ListVar("note*")),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-note")),CallNoArgs(SVar("conc"))]),Var("ast")))))]),Seq(Assign(Var(ListVar("error*")),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-error")),CallNoArgs(SVar("conc"))]),Var("ast"))),Seq(Assign(Var(ListVar("warning*")),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-warning")),CallNoArgs(SVar("conc"))]),Var("ast"))),Assign(Var(ListVar("note*")),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-note")),CallNoArgs(SVar("conc"))]),Var("ast")))))))])),RDefT("analysis-message-update-partitions-queue",[],[DefaultVarDec("language"),DefaultVarDec("project-path")],RuleNoCond(Var(ListVar("partition*")),App(CallT(SVar("queue-strategy"),[],[NoAnnoList(Str("\"analysis-message-update-partitions\"")),NoAnnoList(Str("\"Updating messages\""))]),NoAnnoList(Tuple([Var(ListVar("partition*")),Var("language"),Var("project-path")]))))),RDefNoArgs("analysis-message-update-partitions",Rule(NoAnnoList(Tuple([Var(ListVar("partition*")),Var("language"),Var("project-path")])),App(Call(SVar("filter"),[Seq(Not(CallNoArgs(SVar("is-test-file"))),CallNoArgs(SVar("analysis-message-update-partition")))]),Var(ListVar("partition*"))),[WithClause(Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")])))])),RDefNoArgs("analysis-message-update-partition",RuleNoCond(Var("partition"),App(Seq(CallNoArgs(SVar("analyze-get-messages")),CallT(SVar("set-only-markers"),[],[Var("partition")])),Var("partition"))))]),Rules([RDefT("analysis-save-default",[],[DefaultVarDec("language")],Rule(NoAnnoList(Tuple([Wld,Wld,Wld,Wld,Var("project-path")])),NoAnnoList(Op("None",[])),[WithClause(Seq(CallT(SVar("index-setup"),[],[Var("language"),Var("project-path")]),Seq(CallNoArgs(SVar("index-persist")),Seq(CallT(SVar("task-setup"),[],[Var("project-path")]),CallNoArgs(SVar("task-persist"))))))]))]),Rules([SDef("analysis-default-debug",[DefaultVarDec("msg")],Call(SVar("try"),[Call(SVar("analysis-default-debug-interface"),[CallNoArgs(SVar("msg"))])])),SDefNoArgs("analysis-default-debug",Call(SVar("try"),[CallNoArgs(SVar("analysis-default-debug-interface"))])),SDef("analysis-default-debug-interface",[DefaultVarDec("msg")],Fail),SDefNoArgs("analysis-default-debug-interface",Fail),SDef("analysis-default-debug-time",[DefaultVarDec("msg")],Call(SVar("try"),[Call(SVar("analysis-default-debug-time-interface"),[CallNoArgs(SVar("msg"))])])),SDefNoArgs("analysis-default-debug-time",Call(SVar("try"),[CallNoArgs(SVar("analysis-default-debug-time-interface"))])),SDef("analysis-default-debug-time-interface",[DefaultVarDec("msg")],Fail),SDefNoArgs("analysis-default-debug-time-interface",Fail),SDefNoArgs("analysis-debug-results",Seq(Match(NoAnnoList(Tuple([Var("removed-entry-count"),Var("added-entry-count"),Var("removed-task-count"),Var("added-task-count"),Var("invalidated-task-count"),Var(ListVar("evaluated-task*")),Var(ListVar("skipped-task*")),Var(ListVar("unevaluated-task*"))]))),Seq(BA(CallNoArgs(SVar("analysis-default-debug")),NoAnnoList(StringQuotation1("  	                           ",[QStr("Entries : "),StringEscape1("  	                                     ",Var("removed-entry-count")),QStr(" removed, "),StringEscape1("  	                                                                    ",Var("added-entry-count")),QStr(" added.")]))),Seq(BA(CallNoArgs(SVar("analysis-default-debug")),NoAnnoList(StringQuotation1("                               ",[QStr("Tasks   : "),StringEscape1("                                         ",Var("removed-task-count")),QStr(" removed, "),StringEscape1("                                                                       ",Var("added-task-count")),QStr(" added, "),StringEscape1("                                                                                                 ",Var("invalidated-task-count")),QStr(" invalidated, "),StringEscape1("                                                                                                                                       ",App(CallNoArgs(SVar("length")),Var(ListVar("evaluated-task*")))),QStr(" evaluated, "),StringEscape1("                                                                                                                                                                             ",App(CallNoArgs(SVar("length")),Var(ListVar("skipped-task*")))),QStr(" skipped, "),StringEscape1("                                                                                                                                                                                                               ",App(CallNoArgs(SVar("length")),Var(ListVar("unevaluated-task*")))),QStr(" unevaluated.")]))),BA(Call(SVar("map"),[Seq(CallT(SVar("task-debug-info"),[],[RootApp(Id)]),Call(SVar("analysis-default-debug"),[Build(NoAnnoList(Str("\"Unevaluated: \"")))]))]),Var(ListVar("unevaluated-task*")))))))])])