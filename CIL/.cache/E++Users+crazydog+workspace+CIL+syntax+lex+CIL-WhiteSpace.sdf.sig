module(unparameterized("lex/CIL-WhiteSpace"),[],[exports(conc-grammars(conc-grammars(lexical-syntax([prod([char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r")))))))],layout,attrs([])),prod([lit(";"),char-class(simple-charclass(present(conc(short("\\n"),short("\\r")))))],layout,attrs([])),prod([lit(";"),char-class(simple-charclass(present(conc(short("\\ "),short("\\t"))))),iter-star(char-class(comp(simple-charclass(present(conc(short("\\n"),short("\\r"))))))),alt(char-class(simple-charclass(present(conc(short("\\n"),short("\\r"))))),sort("EOF"))],layout,attrs([])),prod([],sort("EOF"),attrs([]))]),lexical-restrictions([follow([sort("EOF")],single(char-class(comp(simple-charclass(absent)))))])),context-free-restrictions([follow([opt(layout)],single(char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r"))))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\;"))),single(char-class(simple-charclass(present(conc(short("\\ "),short("\\t"))))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\;"))),single(char-class(simple-charclass(present(conc(short("\\n"),short("\\r")))))))))])))])